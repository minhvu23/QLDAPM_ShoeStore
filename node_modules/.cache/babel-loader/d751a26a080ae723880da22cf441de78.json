{"ast":null,"code":"import * as request from \"../utils/request\"; // Lấy tất cả sản phẩm trong giỏ hàng\n\nexport const getAllCartItems = async () => {\n  try {\n    const res = await request.get('/Cart/get-all');\n\n    if (res.status === 200) {\n      return res.data;\n    } else {\n      console.error('Error fetching cart items:', res.statusText);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to fetch cart items:', error);\n    return null;\n  }\n}; // Thêm sản phẩm vào giỏ hàng\n\nexport const addToCart = async (productId, quantity) => {\n  try {\n    const res = await request.post('/Cart/add-to-cart', {\n      productId,\n      quantity\n    });\n\n    if (res.status === 200) {\n      return res.data;\n    } else {\n      console.error('Error adding product to cart:', res.statusText);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to add product to cart:', error);\n    return null;\n  }\n}; // Cập nhật giỏ hàng\n\nexport const updateCart = async (productId, quantity) => {\n  try {\n    const res = await request.put('/Cart/update-cart', {\n      productId,\n      quantity\n    });\n\n    if (res.status === 200) {\n      return res.data;\n    } else {\n      console.error('Error updating cart:', res.statusText);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to update cart:', error);\n    return null;\n  }\n}; // Xóa sản phẩm khỏi giỏ hàng\n\nexport const deleteCartItem = async cartItemId => {\n  try {\n    const res = await request.delete(`/Cart/delete-cart-item/${cartItemId}`);\n\n    if (res.status === 200) {\n      return res.data;\n    } else {\n      console.error('Error deleting cart item:', res.statusText);\n      return null;\n    }\n  } catch (error) {\n    console.error('Failed to delete cart item:', error);\n    return null;\n  }\n};","map":{"version":3,"sources":["D:/QLDAPM_ShoesStore/ShoesStore-ui/src/apiServices/cartService.js"],"names":["request","getAllCartItems","res","get","status","data","console","error","statusText","addToCart","productId","quantity","post","updateCart","put","deleteCartItem","cartItemId","delete"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,yB,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAG,YAAY;AACvC,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMF,OAAO,CAACG,GAAR,CAAY,eAAZ,CAAlB;;AACA,QAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOF,GAAG,CAACG,IAAX;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CL,GAAG,CAACM,UAAhD;AACA,aAAO,IAAP;AACH;AACJ,GARD,CAQE,OAAOD,KAAP,EAAc;AACZD,IAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACA,WAAO,IAAP;AACH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAME,SAAS,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,KAA+B;AACpD,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMF,OAAO,CAACY,IAAR,CAAa,mBAAb,EAAkC;AAChDF,MAAAA,SADgD;AAEhDC,MAAAA;AAFgD,KAAlC,CAAlB;;AAIA,QAAIT,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOF,GAAG,CAACG,IAAX;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CL,GAAG,CAACM,UAAnD;AACA,aAAO,IAAP;AACH;AACJ,GAXD,CAWE,OAAOD,KAAP,EAAc;AACZD,IAAAA,OAAO,CAACC,KAAR,CAAc,gCAAd,EAAgDA,KAAhD;AACA,WAAO,IAAP;AACH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAMM,UAAU,GAAG,OAAOH,SAAP,EAAkBC,QAAlB,KAA+B;AACrD,MAAI;AACA,UAAMT,GAAG,GAAG,MAAMF,OAAO,CAACc,GAAR,CAAY,mBAAZ,EAAiC;AAC/CJ,MAAAA,SAD+C;AAE/CC,MAAAA;AAF+C,KAAjC,CAAlB;;AAIA,QAAIT,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOF,GAAG,CAACG,IAAX;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,KAAR,CAAc,sBAAd,EAAsCL,GAAG,CAACM,UAA1C;AACA,aAAO,IAAP;AACH;AACJ,GAXD,CAWE,OAAOD,KAAP,EAAc;AACZD,IAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,WAAO,IAAP;AACH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAChD,MAAI;AACA,UAAMd,GAAG,GAAG,MAAMF,OAAO,CAACiB,MAAR,CAAgB,0BAAyBD,UAAW,EAApD,CAAlB;;AACA,QAAId,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,aAAOF,GAAG,CAACG,IAAX;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd,EAA2CL,GAAG,CAACM,UAA/C;AACA,aAAO,IAAP;AACH;AACJ,GARD,CAQE,OAAOD,KAAP,EAAc;AACZD,IAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACA,WAAO,IAAP;AACH;AACJ,CAbM","sourcesContent":["import * as request from '~/utils/request';\r\n\r\n// Lấy tất cả sản phẩm trong giỏ hàng\r\nexport const getAllCartItems = async () => {\r\n    try {\r\n        const res = await request.get('/Cart/get-all');\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            console.error('Error fetching cart items:', res.statusText);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Failed to fetch cart items:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Thêm sản phẩm vào giỏ hàng\r\nexport const addToCart = async (productId, quantity) => {\r\n    try {\r\n        const res = await request.post('/Cart/add-to-cart', {\r\n            productId,\r\n            quantity,\r\n        });\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            console.error('Error adding product to cart:', res.statusText);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Failed to add product to cart:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Cập nhật giỏ hàng\r\nexport const updateCart = async (productId, quantity) => {\r\n    try {\r\n        const res = await request.put('/Cart/update-cart', {\r\n            productId,\r\n            quantity,\r\n        });\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            console.error('Error updating cart:', res.statusText);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Failed to update cart:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// Xóa sản phẩm khỏi giỏ hàng\r\nexport const deleteCartItem = async (cartItemId) => {\r\n    try {\r\n        const res = await request.delete(`/Cart/delete-cart-item/${cartItemId}`);\r\n        if (res.status === 200) {\r\n            return res.data;\r\n        } else {\r\n            console.error('Error deleting cart item:', res.statusText);\r\n            return null;\r\n        }\r\n    } catch (error) {\r\n        console.error('Failed to delete cart item:', error);\r\n        return null;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}