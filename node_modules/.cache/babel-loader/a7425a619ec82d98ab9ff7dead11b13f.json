{"ast":null,"code":"var _jsxFileName = \"D:\\\\QLDAPM_ShoesStore\\\\ShoesStore-ui\\\\src\\\\components\\\\Cart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAllCartItems, deleteCartItem, updateCart } from \"../../apiServices/cartService\";\nimport classNames from 'classnames/bind';\nimport styles from \"./Cart.module.scss\"; // Import CSS module riêng cho Cart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\n\nconst Cart = () => {\n  _s();\n\n  const [cartItems, setCartItems] = useState([]); // Khởi tạo với một mảng rỗng để tránh undefined\n  // Lấy tất cả các sản phẩm trong giỏ hàng\n\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const items = await getAllCartItems();\n        setCartItems(items || []); // Nếu items không có, set về mảng rỗng\n      } catch (error) {\n        console.error('Failed to fetch cart items:', error);\n        setCartItems([]); // Trong trường hợp lỗi, đảm bảo set về mảng rỗng\n      }\n    };\n\n    fetchCartItems();\n  }, []); // Cập nhật số lượng của sản phẩm trong giỏ hàng\n\n  const handleUpdateQuantity = async (productId, newQuantity) => {\n    try {\n      const updatedCart = await updateCart(productId, newQuantity);\n      setCartItems(updatedCart || []); // Đảm bảo rằng cập nhật luôn set về mảng hợp lệ\n    } catch (error) {\n      console.error('Failed to update cart:', error);\n    }\n  }; // Xóa sản phẩm khỏi giỏ hàng\n\n\n  const handleDeleteCartItem = async cartItemId => {\n    try {\n      const updatedCart = await deleteCartItem(cartItemId);\n      setCartItems(updatedCart || []); // Set về mảng rỗng nếu cần thiết\n    } catch (error) {\n      console.error('Failed to delete cart item:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), cartItems && cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: cx('cart-list'),\n      children: cartItems && cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: cx('cart-item'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('image'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.productImageUrl,\n            alt: item.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('details'),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: cx('product-name'),\n            children: item.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx('price'),\n            children: [\"Price: \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx('quantity'),\n            children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: item.quantity,\n              onChange: e => handleUpdateQuantity(item.productId, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cx('remove-btn'),\n            onClick: () => handleDeleteCartItem(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/QLDAPM_ShoesStore/ShoesStore-ui/src/components/Cart/index.js"],"names":["React","useEffect","useState","getAllCartItems","deleteCartItem","updateCart","classNames","styles","cx","bind","Cart","cartItems","setCartItems","fetchCartItems","items","error","console","handleUpdateQuantity","productId","newQuantity","updatedCart","handleDeleteCartItem","cartItemId","length","map","item","productImageUrl","productName","price","quantity","e","target","value","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getAllCartItems, deleteCartItem, updateCart } from '~/apiServices/cartService';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Cart.module.scss'; // Import CSS module riêng cho Cart\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Cart = () => {\r\n    const [cartItems, setCartItems] = useState([]); // Khởi tạo với một mảng rỗng để tránh undefined\r\n\r\n    // Lấy tất cả các sản phẩm trong giỏ hàng\r\n    useEffect(() => {\r\n        const fetchCartItems = async () => {\r\n            try {\r\n                const items = await getAllCartItems();\r\n                setCartItems(items || []); // Nếu items không có, set về mảng rỗng\r\n            } catch (error) {\r\n                console.error('Failed to fetch cart items:', error);\r\n                setCartItems([]); // Trong trường hợp lỗi, đảm bảo set về mảng rỗng\r\n            }\r\n        };\r\n        fetchCartItems();\r\n    }, []);\r\n\r\n    // Cập nhật số lượng của sản phẩm trong giỏ hàng\r\n    const handleUpdateQuantity = async (productId, newQuantity) => {\r\n        try {\r\n            const updatedCart = await updateCart(productId, newQuantity);\r\n            setCartItems(updatedCart || []); // Đảm bảo rằng cập nhật luôn set về mảng hợp lệ\r\n        } catch (error) {\r\n            console.error('Failed to update cart:', error);\r\n        }\r\n    };\r\n\r\n    // Xóa sản phẩm khỏi giỏ hàng\r\n    const handleDeleteCartItem = async (cartItemId) => {\r\n        try {\r\n            const updatedCart = await deleteCartItem(cartItemId);\r\n            setCartItems(updatedCart || []); // Set về mảng rỗng nếu cần thiết\r\n        } catch (error) {\r\n            console.error('Failed to delete cart item:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <h2>Your Cart</h2>\r\n            {cartItems && cartItems.length === 0 ? (\r\n                <p>Your cart is empty.</p>\r\n            ) : (\r\n                <ul className={cx('cart-list')}>\r\n                    {cartItems && cartItems.map((item) => (\r\n                        <li key={item.id} className={cx('cart-item')}>\r\n                            <div className={cx('image')}>\r\n                                <img src={item.productImageUrl} alt={item.productName} />\r\n                            </div>\r\n                            <div className={cx('details')}>\r\n                                <h3 className={cx('product-name')}>{item.productName}</h3>\r\n                                <p className={cx('price')}>Price: {item.price}</p>\r\n                                <p className={cx('quantity')}>\r\n                                    Quantity:\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={item.quantity}\r\n                                        onChange={(e) => handleUpdateQuantity(item.productId, e.target.value)}\r\n                                    />\r\n                                </p>\r\n                                <button className={cx('remove-btn')} onClick={() => handleDeleteCartItem(item.id)}>\r\n                                    Remove\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}