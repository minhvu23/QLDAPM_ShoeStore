{"ast":null,"code":"const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.indexOf(n) >= 0) continue;\n    t[n] = r[n];\n  }\n\n  return t;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    runTransition,\n    backdropTransition,\n    runBackdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  } // TODO: I think this needs to be in an effect\n\n\n  if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n\n  if (!container) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"sources":["C:/Users/HP/Desktop/QLDAPM_ShoesStore/tiktok-ui/node_modules/@restart/ui/esm/Modal.js"],"names":["_excluded","_objectWithoutPropertiesLoose","r","e","t","n","hasOwnProperty","call","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","renderTransition","isEscKey","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","Object","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","ownerWindow","isMounted","prevShow","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","target","currentTarget","defaultPrevented","handleHidden","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","createPortal","displayName","Manager"],"mappings":"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","sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"]},"metadata":{},"sourceType":"module"}