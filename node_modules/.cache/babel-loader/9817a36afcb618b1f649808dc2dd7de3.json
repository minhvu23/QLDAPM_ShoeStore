{"ast":null,"code":"import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition(_ref) {\n  let {\n    in: inProp,\n    onTransition\n  } = _ref;\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false; // this is for strict mode\n\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\n\nexport default function ImperativeTransition(_ref2) {\n  let {\n    children,\n    in: inProp,\n    onExited,\n    onEntered,\n    transition\n  } = _ref2;\n  const [exited, setExited] = useState(!inProp); // TODO: I think this needs to be in an effect\n\n  if (inProp && exited) {\n    setExited(false);\n  }\n\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/QLDAPM_ShoesStore/tiktok-ui/node_modules/@restart/ui/esm/ImperativeTransition.js"],"names":["useMergedRefs","useEventCallback","useIsomorphicEffect","React","useRef","cloneElement","useState","NoopTransition","RTGTransition","jsx","_jsx","useTransition","in","inProp","onTransition","ref","isInitialRef","handleTransition","current","undefined","stale","element","initial","isStale","ImperativeTransition","children","onExited","onEntered","transition","exited","setExited","options","onFinish","Promise","resolve","then","error","combinedRef","renderTransition","component","runTransition","props","Object","assign"],"mappings":"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","sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}"]},"metadata":{},"sourceType":"module"}