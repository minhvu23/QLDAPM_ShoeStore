{"ast":null,"code":"import * as request from \"../utils/request\"; // Đặt cartId mặc định là 1\n\nconst cartId = 1; // Lấy sản phẩm trong giỏ hàng theo cartId\n\nexport const getCartItemsByCartId = async () => {\n  try {\n    const response = await request.get(`/api/Cart/${cartId}/items`);\n    return response.data; // Giả sử API trả về danh sách sản phẩm\n  } catch (error) {\n    console.error('Failed to fetch cart items:', error);\n    throw error;\n  }\n}; // Lấy tổng giá trị của giỏ hàng\n\nexport const getCartTotal = async () => {\n  try {\n    const response = await request.get(`/api/Cart/${cartId}/total`);\n    return response.data; // Giả sử API trả về tổng giá trị\n  } catch (error) {\n    console.error('Failed to fetch cart total:', error);\n    throw error;\n  }\n}; // Thêm sản phẩm vào giỏ hàng\n\nexport const addToCart = async (productId, quantity, price) => {\n  try {\n    const res = await request.post(`Cart/add-to-cart`, {\n      cartId,\n      productId,\n      quantity,\n      price\n    });\n    return res.data;\n  } catch (error) {\n    console.error('Failed to add to cart:', error);\n    throw error;\n  }\n}; // Cập nhật giỏ hàng\n\nexport const updateCart = async (productId, quantity) => {\n  try {\n    const res = await request.put('/Cart/update-cart', {\n      cartId,\n      productId,\n      quantity\n    });\n    return res.data;\n  } catch (error) {\n    console.error('Failed to update cart: ', error);\n    throw error;\n  }\n}; // Xóa sản phẩm khỏi giỏ hàng\n\nexport const deleteCartItem = async cartItemId => {\n  try {\n    const res = await request.deleteRequest(`/Cart/delete-cart-item/${cartItemId}`);\n    return res.data;\n  } catch (error) {\n    console.error('Failed to delete cart item: ', error);\n    throw error;\n  }\n};","map":{"version":3,"sources":["D:/QLDAPM_ShoesStore/ShoesStore-ui/src/apiServices/cartService.js"],"names":["request","cartId","getCartItemsByCartId","response","get","data","error","console","getCartTotal","addToCart","productId","quantity","price","res","post","updateCart","put","deleteCartItem","cartItemId","deleteRequest"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,yB,CAGA;;AACA,MAAMC,MAAM,GAAG,CAAf,C,CAEA;;AACA,OAAO,MAAMC,oBAAoB,GAAG,YAAY;AAC5C,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,CAAa,aAAYH,MAAO,QAAhC,CAAvB;AACA,WAAOE,QAAQ,CAACE,IAAhB,CAFA,CAEsB;AACzB,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACA,UAAMA,KAAN;AACH;AACJ,CARM,C,CAUP;;AACA,OAAO,MAAME,YAAY,GAAG,YAAY;AACpC,MAAI;AACA,UAAML,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,CAAa,aAAYH,MAAO,QAAhC,CAAvB;AACA,WAAOE,QAAQ,CAACE,IAAhB,CAFA,CAEsB;AACzB,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACA,UAAMA,KAAN;AACH;AACJ,CARM,C,CAUP;;AACA,OAAO,MAAMG,SAAS,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,KAA5B,KAAsC;AAC3D,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMb,OAAO,CAACc,IAAR,CAAc,kBAAd,EAAiC;AAC/Cb,MAAAA,MAD+C;AAE/CS,MAAAA,SAF+C;AAG/CC,MAAAA,QAH+C;AAI/CC,MAAAA;AAJ+C,KAAjC,CAAlB;AAMA,WAAOC,GAAG,CAACR,IAAX;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACA,UAAMA,KAAN;AACH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMS,UAAU,GAAG,OAAOL,SAAP,EAAkBC,QAAlB,KAA+B;AACrD,MAAI;AACA,UAAME,GAAG,GAAG,MAAMb,OAAO,CAACgB,GAAR,CAAY,mBAAZ,EAAiC;AAC/Cf,MAAAA,MAD+C;AAE/CS,MAAAA,SAF+C;AAG/CC,MAAAA;AAH+C,KAAjC,CAAlB;AAKA,WAAOE,GAAG,CAACR,IAAX;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACA,UAAMA,KAAN;AACH;AACJ,CAZM,C,CAcP;;AACA,OAAO,MAAMW,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAChD,MAAI;AACA,UAAML,GAAG,GAAG,MAAMb,OAAO,CAACmB,aAAR,CAAuB,0BAAyBD,UAAW,EAA3D,CAAlB;AACA,WAAOL,GAAG,CAACR,IAAX;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACA,UAAMA,KAAN;AACH;AACJ,CARM","sourcesContent":["import * as request from '~/utils/request';\r\n\r\n\r\n// Đặt cartId mặc định là 1\r\nconst cartId = 1;\r\n\r\n// Lấy sản phẩm trong giỏ hàng theo cartId\r\nexport const getCartItemsByCartId = async () => {\r\n    try {\r\n        const response = await request.get(`/api/Cart/${cartId}/items`);\r\n        return response.data; // Giả sử API trả về danh sách sản phẩm\r\n    } catch (error) {\r\n        console.error('Failed to fetch cart items:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Lấy tổng giá trị của giỏ hàng\r\nexport const getCartTotal = async () => {\r\n    try {\r\n        const response = await request.get(`/api/Cart/${cartId}/total`);\r\n        return response.data; // Giả sử API trả về tổng giá trị\r\n    } catch (error) {\r\n        console.error('Failed to fetch cart total:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Thêm sản phẩm vào giỏ hàng\r\nexport const addToCart = async (productId, quantity, price) => {\r\n    try {\r\n        const res = await request.post(`Cart/add-to-cart`, {\r\n            cartId,\r\n            productId,\r\n            quantity,\r\n            price\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error('Failed to add to cart:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Cập nhật giỏ hàng\r\nexport const updateCart = async (productId, quantity) => {\r\n    try {\r\n        const res = await request.put('/Cart/update-cart', {\r\n            cartId,\r\n            productId,\r\n            quantity,\r\n        });\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error('Failed to update cart: ', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Xóa sản phẩm khỏi giỏ hàng\r\nexport const deleteCartItem = async (cartItemId) => {\r\n    try {\r\n        const res = await request.deleteRequest(`/Cart/delete-cart-item/${cartItemId}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error('Failed to delete cart item: ', error);\r\n        throw error;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}