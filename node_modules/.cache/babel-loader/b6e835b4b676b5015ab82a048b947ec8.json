{"ast":null,"code":"var _jsxFileName = \"D:\\\\QLDAPM_ShoesStore\\\\ShoesStore-ui\\\\src\\\\components\\\\Cart\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCartItemsByCartId, getCartTotal, deleteCartItem, updateCart, addToCart } from \"../../apiServices/cartService\";\nimport classNames from 'classnames/bind';\nimport styles from \"./Cart.module.scss\"; // Import CSS module riêng cho Cart\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = classNames.bind(styles);\n\nconst Cart = _ref => {\n  _s();\n\n  let {\n    cartId\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  const [cartTotal, setCartTotal] = useState(0);\n  const [loading, setLoading] = useState(true); // Trạng thái tải\n  // Lấy tất cả các sản phẩm trong giỏ hàng bằng cartId\n\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      setLoading(true); // Bắt đầu tải\n\n      try {\n        const items = await getCartItemsByCartId(cartId);\n        setCartItems(items || []); // Nếu không có items, set về mảng rỗng\n      } catch (error) {\n        console.error('Failed to fetch cart items:', error);\n      } finally {\n        setLoading(false); // Kết thúc tải\n      }\n    };\n\n    const fetchCartTotal = async () => {\n      try {\n        const total = await getCartTotal(cartId);\n        setCartTotal(total);\n      } catch (error) {\n        console.error('Failed to fetch cart total:', error);\n      }\n    };\n\n    fetchCartItems();\n    fetchCartTotal();\n  }, [cartId]); // Cập nhật số lượng của sản phẩm trong giỏ hàng\n\n  const handleUpdateQuantity = async (productId, newQuantity) => {\n    try {\n      await updateCart(productId, newQuantity);\n      const updatedItems = await getCartItemsByCartId(cartId);\n      setCartItems(updatedItems);\n    } catch (error) {\n      console.error('Failed to update cart:', error);\n    }\n  }; // Xóa sản phẩm khỏi giỏ hàng\n\n\n  const handleDeleteCartItem = async cartItemId => {\n    try {\n      await deleteCartItem(cartItemId);\n      const updatedItems = await getCartItemsByCartId(cartId);\n      setCartItems(updatedItems);\n    } catch (error) {\n      console.error('Failed to delete cart item:', error);\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this); // Hiển thị thông báo khi đang tải\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: cx('cart-list'),\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: cx('cart-item'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('image'),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.productImageUrl,\n            alt: item.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cx('details'),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: cx('product-name'),\n            children: item.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx('price'),\n            children: [\"Price: \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: cx('quantity'),\n            children: [\"Quantity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: item.quantity,\n              onChange: e => handleUpdateQuantity(item.productId, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cx('remove-btn'),\n            onClick: () => handleDeleteCartItem(item.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total: \", cartTotal]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"cv7YEeP5lFtMtKq3Rr9buAzED9I=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/QLDAPM_ShoesStore/ShoesStore-ui/src/components/Cart/index.js"],"names":["React","useEffect","useState","getCartItemsByCartId","getCartTotal","deleteCartItem","updateCart","addToCart","classNames","styles","cx","bind","Cart","cartId","cartItems","setCartItems","cartTotal","setCartTotal","loading","setLoading","fetchCartItems","items","error","console","fetchCartTotal","total","handleUpdateQuantity","productId","newQuantity","updatedItems","handleDeleteCartItem","cartItemId","length","map","item","productImageUrl","productName","price","quantity","e","target","value","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getCartItemsByCartId, getCartTotal, deleteCartItem, updateCart, addToCart } from '~/apiServices/cartService';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './Cart.module.scss'; // Import CSS module riêng cho Cart\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Cart = ({ cartId }) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [cartTotal, setCartTotal] = useState(0);\r\n    const [loading, setLoading] = useState(true); // Trạng thái tải\r\n\r\n    // Lấy tất cả các sản phẩm trong giỏ hàng bằng cartId\r\n    useEffect(() => {\r\n        const fetchCartItems = async () => {\r\n            setLoading(true); // Bắt đầu tải\r\n            try {\r\n                const items = await getCartItemsByCartId(cartId);\r\n                setCartItems(items || []); // Nếu không có items, set về mảng rỗng\r\n            } catch (error) {\r\n                console.error('Failed to fetch cart items:', error);\r\n            } finally {\r\n                setLoading(false); // Kết thúc tải\r\n            }\r\n        };\r\n\r\n        const fetchCartTotal = async () => {\r\n            try {\r\n                const total = await getCartTotal(cartId);\r\n                setCartTotal(total);\r\n            } catch (error) {\r\n                console.error('Failed to fetch cart total:', error);\r\n            }\r\n        };\r\n\r\n        fetchCartItems();\r\n        fetchCartTotal();\r\n    }, [cartId]);\r\n\r\n\r\n\r\n    // Cập nhật số lượng của sản phẩm trong giỏ hàng\r\n    const handleUpdateQuantity = async (productId, newQuantity) => {\r\n        try {\r\n            await updateCart(productId, newQuantity);\r\n            const updatedItems = await getCartItemsByCartId(cartId);\r\n            setCartItems(updatedItems);\r\n        } catch (error) {\r\n            console.error('Failed to update cart:', error);\r\n        }\r\n    };\r\n\r\n    // Xóa sản phẩm khỏi giỏ hàng\r\n    const handleDeleteCartItem = async (cartItemId) => {\r\n        try {\r\n            await deleteCartItem(cartItemId);\r\n            const updatedItems = await getCartItemsByCartId(cartId);\r\n            setCartItems(updatedItems);\r\n        } catch (error) {\r\n            console.error('Failed to delete cart item:', error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>; // Hiển thị thông báo khi đang tải\r\n    }\r\n\r\n    return (\r\n        <div className={cx('wrapper')}>\r\n            <h2>Your Cart</h2>\r\n            {cartItems.length === 0 ? (\r\n                <p>Your cart is empty.</p>\r\n            ) : (\r\n                <ul className={cx('cart-list')}>\r\n                    {cartItems.map((item) => (\r\n                        <li key={item.id} className={cx('cart-item')}>\r\n                            <div className={cx('image')}>\r\n                                <img src={item.productImageUrl} alt={item.productName} />\r\n                            </div>\r\n                            <div className={cx('details')}>\r\n                                <h3 className={cx('product-name')}>{item.productName}</h3>\r\n                                <p className={cx('price')}>Price: {item.price}</p>\r\n                                <p className={cx('quantity')}>\r\n                                    Quantity:\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={item.quantity}\r\n                                        onChange={(e) => handleUpdateQuantity(item.productId, e.target.value)}\r\n                                    />\r\n                                </p>\r\n                                <button className={cx('remove-btn')} onClick={() => handleDeleteCartItem(item.id)}>\r\n                                    Remove\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            <h3>Total: {cartTotal}</h3> {/* Hiển thị tổng giá trị của giỏ hàng */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}